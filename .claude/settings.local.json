{
  "permissions": {
    "allow": [
      "Bash(go version:*)",
      "Bash(x86_64-w64-mingw32-gcc:*)",
      "Bash(choco:*)",
      "Bash(powershell -Command \"Start-Process powershell -Verb RunAs -ArgumentList ''-NoExit'', ''-Command'', ''choco install golang -y'' -Wait\")",
      "Bash(export PATH=\"/c/Program Files/Go/bin:$PATH\")",
      "Bash(powershell -Command \"Start-Process powershell -Verb RunAs -ArgumentList ''-NoExit'', ''-Command'', ''cd C:\\Users\\user\\OpenCore; .\\setup-llvm-mingw.ps1'' -Wait\")",
      "Bash(powershell -Command \"Start-Process powershell -Verb RunAs -ArgumentList ''-NoExit'', ''-Command'', ''Set-ExecutionPolicy RemoteSigned -Scope CurrentUser -Force; cd C:\\Users\\user\\OpenCore; .\\setup-llvm-mingw.ps1'' -Wait\")",
      "Read(//c/Program Files/**)",
      "Bash(export PATH=\"/c/Program Files/Go/bin:/c/Program Files/llvm-mingw-20240619-ucrt-x86_64/bin:$PATH\")",
      "Bash(go mod tidy:*)",
      "Bash(TAGS=\"with_gvisor,with_quic,with_wireguard,with_utls,with_low_memory,with_conntrack,with_clash_api\":*)",
      "Bash(BUILD_VERSION=\"v0.0.2-local\":*)",
      "Bash(LDFLAGS=\"-X github.com/sagernet/sing-box/constant.Version=$BUILD_VERSION -s -w -buildid= -checklinkname=0\":*)",
      "Bash(export CC=\"x86_64-w64-mingw32-gcc\":*)",
      "Bash(export CXX=\"x86_64-w64-mingw32-g++\")",
      "Bash(CGO_ENABLED=1 GOOS=windows GOARCH=amd64 go build:*)",
      "Read(//c/Users/user/OpenApp/**)",
      "Bash(flutter run:*)",
      "Bash(powershell -Command \"start ms-settings:developers\")",
      "Bash(powershell -Command \"Start-Process powershell -Verb RunAs -ArgumentList ''-NoExit'', ''-Command'', ''reg add \"\"HKEY_LOCAL_MACHINE\\SOFT WARE\\Microsoft\\Windows\\CurrentVersion\\AppModelUnlock\"\" /t REG_DWORD /f /v \"\"AllowDevelopmentWithoutDevLicense\"\" /d \"\"1\"\"'' -Wait\")",
      "Bash(dlltool:*)",
      "Bash(gendef:*)",
      "Bash(flutter pub get:*)",
      "Bash(powershell -Command \"\n# Setup Visual Studio environment\n$vsPath = & ''C:\\Program Files (x86)\\Microsoft Visual Studio\\Installer\\vswhere.exe'' -latest -property installationPath\nif ($vsPath) {\n  Write-Host \"\"Found Visual Studio at: $vsPath\"\"\n  $vcvars = \"\"$vsPath\\VC\\Auxiliary\\Build\\vcvars64.bat\"\"\n  if (Test-Path $vcvars) {\n    Write-Host \"\"Setting up VS environment...\"\"\n    cmd /c \"\"\\`\"\"$vcvars\\`\"\" && cd /d C:\\Users\\user\\OpenApp\\windows && powershell -ExecutionPolicy Bypass -File generate-lib.ps1\"\"\n  } else {\n    Write-Error ''vcvars64.bat not found''\n    exit 1\n  }\n} else {\n  Write-Error ''Visual Studio not found''\n  exit 1\n}\n\")",
      "Bash(ls:*)",
      "Bash(powershell -Command \"$env:APPDATA\")",
      "Bash(powershell -Command:*)",
      "Read(//c/Users/user/AppData/Roaming/**)",
      "Bash(flutter build:*)",
      "Bash(go list:*)",
      "Bash(pkill:*)",
      "Bash(go doc:*)",
      "Bash(taskkill:*)",
      "Bash(md5sum:*)",
      "Bash(export TAGS=\"with_gvisor,with_quic,with_wireguard,with_utls,with_low_memory,with_conntrack,with_clash_api\")",
      "Bash(export BUILD_VERSION=\"v0.0.2-local\")",
      "Bash(export LDFLAGS:*)",
      "Bash(cat:*)",
      "Bash(find:*)",
      "Bash(export BUILD_VERSION=\"v0.0.2-local-fixed\")",
      "Bash(export LDFLAGS=\"-X github.com/sagernet/sing-box/constant.Version=$BUILD_VERSION -s -w -buildid= -checklinkname=0\":*)",
      "Bash(export BUILD_VERSION=\"v0.0.2-local-fixed2\")",
      "Bash(go build:*)",
      "Read(//c/Users/user/**)",
      "WebSearch",
      "Bash(__NEW_LINE__ echo \"=== ANALYSIS COMPLETE ===\")",
      "Bash(awk:*)",
      "Bash(go clean:*)",
      "Bash(flutter clean:*)",
      "Bash(export CGO_ENABLED=1:*)",
      "Bash(export GOOS=windows)",
      "Bash(export GOARCH=amd64)",
      "Bash(nslookup:*)",
      "Bash(export BUILD_VERSION=\"v0.0.2-local-final-fix\")",
      "Bash(export BUILD_VERSION=\"v0.0.2-clean\")",
      "Bash(export BUILD_VERSION=\"v0.0.2-tun-support\")",
      "Bash(export BUILD_VERSION=\"v0.0.3-windows-tun-fixed\")",
      "Bash(ipconfig:*)",
      "Bash(netsh interface show:*)",
      "Bash(tasklist:*)",
      "Read(//c/Windows/System32/drivers//**)",
      "Bash(export TAGS=\"with_gvisor,with_quic,with_wireguard,with_utls,with_low_memory,with_conntrack,with_clash_api\" BUILD_VERSION=\"v0.0.3-thread-fix\":*)",
      "Bash(export TAGS=\"with_gvisor,with_quic,with_wireguard,with_utls,with_low_memory,with_conntrack,with_clash_api\" BUILD_VERSION=\"v0.0.3-FIXED\":*)",
      "Bash(chmod:*)",
      "Bash(bash:*)",
      "Bash(./build-windows.sh:*)",
      "Read(//c/Windows/System32/**)",
      "Bash(CGO_ENABLED=1 GOOS=windows GOARCH=amd64 CC=\"x86_64-w64-mingw32-gcc\" CXX=\"x86_64-w64-mingw32-g++\" go build:*)",
      "Bash(./simplify_interfaces.sh)"
    ],
    "deny": [],
    "ask": []
  }
}
